/* TV Camera Controls CSS Module */

.container {
  position: fixed;
  left: var(--tv-safe-zone-left, 5vw);
  top: 50%;
  transform: translateY(-50%);
  z-index: 100;
  
  /* Container sizing based on TV camera config */
  width: 140px; /* TV_CAMERA_CONFIG.CONTROLS_CONTAINER_WIDTH */
  min-height: 200px; /* Accommodate arrows + text */
  
  /* Visual styling */
  background: rgba(0, 0, 0, 0.1); /* TV_CAMERA_CONFIG.CONTROLS_BACKGROUND_OPACITY */
  backdrop-filter: blur(4px); /* TV_CAMERA_CONFIG.CONTROLS_BACKDROP_BLUR */
  border-radius: 12px;
  padding: var(--spacing-md);
  
  /* Animation - coordinated with menu transitions */
  opacity: 1;
  visibility: visible;
  transform: translateY(-50%) translateX(0);
  transition: 
    opacity var(--tv-fade-duration, 200ms) var(--tv-easing-smooth, cubic-bezier(0.4, 0, 0.2, 1)),
    transform var(--tv-slide-in-duration, 300ms) var(--tv-easing-smooth, cubic-bezier(0.4, 0, 0.2, 1)),
    visibility var(--tv-fade-duration, 200ms) var(--tv-easing-smooth, cubic-bezier(0.4, 0, 0.2, 1));
  
  /* Ensure visibility in TV mode */
  pointer-events: none; /* Don't interfere with camera controls */
}

/* Hidden state - coordinated with menu open state */
.container.hidden {
  opacity: 0;
  visibility: hidden;
  transform: translateY(-50%) translateX(-20px);
  transition: 
    opacity var(--tv-fade-duration, 200ms) var(--tv-easing-smooth, cubic-bezier(0.4, 0, 0.2, 1)),
    transform var(--tv-slide-out-duration, 300ms) var(--tv-easing-smooth, cubic-bezier(0.4, 0, 0.2, 1)),
    visibility var(--tv-fade-duration, 200ms) var(--tv-easing-smooth, cubic-bezier(0.4, 0, 0.2, 1));
}

/* Visible state - coordinated with menu close state */
.container.visible {
  opacity: 1;
  visibility: visible;
  transform: translateY(-50%) translateX(0);
  transition: 
    opacity var(--tv-fade-duration, 200ms) var(--tv-easing-smooth, cubic-bezier(0.4, 0, 0.2, 1)),
    transform var(--tv-slide-in-duration, 300ms) var(--tv-easing-smooth, cubic-bezier(0.4, 0, 0.2, 1)),
    visibility var(--tv-fade-duration, 200ms) var(--tv-easing-smooth, cubic-bezier(0.4, 0, 0.2, 1));
}

.container:not(:global(.tv-camera-controls)) {
  display: none;
}

/* Directional arrows container */
.arrowsContainer {
  display: grid;
  grid-template-rows: auto auto auto;
  grid-template-columns: 1fr;
  gap: 20px; /* TV_CAMERA_CONFIG.ARROW_SPACING */
  align-items: center;
  justify-items: center;
  margin-bottom: 32px; /* Space before zoom text */
}

/* Middle row for left-center-right layout */
.arrowsMiddleRow {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  gap: 20px; /* TV_CAMERA_CONFIG.ARROW_SPACING */
  align-items: center;
  width: 100%;
}

/* Center space for visual balance */
.arrowsCenter {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.1);
  border: 2px solid rgba(255, 255, 255, 0.2);
}

/* Individual arrow styling */
.arrow {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 60px; /* TV_CAMERA_CONFIG.ARROW_SIZE */
  height: 60px; /* TV_CAMERA_CONFIG.ARROW_SIZE */
  
  /* Visual styling */
  background: rgba(255, 255, 255, 0.1);
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 8px; /* TV_CAMERA_CONFIG.ARROW_BORDER_RADIUS */
  
  /* Default state */
  opacity: 0.7; /* TV_CAMERA_CONFIG.ARROW_INACTIVE_OPACITY */
  transform: scale(1);
  
  /* Animation */
  transition: all 100ms var(--tv-easing-ui-feedback, cubic-bezier(0.68, -0.55, 0.265, 1.55));
  
  /* Accessibility */
  cursor: pointer;
  user-select: none;
}

.arrow:hover {
  opacity: 0.9;
  transform: scale(1.05); /* TV_CAMERA_CONFIG.ARROW_HOVER_SCALE */
  background: rgba(255, 255, 255, 0.15);
  border-color: rgba(255, 255, 255, 0.4);
}

/* Active state for arrows */
.arrow--active {
  opacity: 1.0; /* TV_CAMERA_CONFIG.ARROW_ACTIVE_OPACITY */
  transform: scale(1.1); /* TV_CAMERA_CONFIG.ARROW_ACTIVE_SCALE */
  background: rgba(74, 144, 226, 0.3); /* TV focus color with transparency */
  border-color: var(--tv-focus-border-color, #4A90E2);
  box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.3);
}

/* Arrow symbol styling */
.arrowSymbol {
  font-size: 24px;
  font-weight: bold;
  color: var(--color-iss-white, #ffffff);
  line-height: 1;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

/* Directional positioning classes */
.arrowTop {
  grid-column: 1;
  grid-row: 1;
}

.arrowLeft {
  grid-column: 1;
  justify-self: start;
}

.arrowRight {
  grid-column: 3;
  justify-self: end;
}

.arrowBottom {
  grid-column: 1;
  grid-row: 3;
}

/* Zoom instruction text */
.zoomText {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin-top: 16px; /* TV_CAMERA_CONFIG.ZOOM_TEXT_OFFSET_TOP adjusted for layout */
}

.zoomInstruction {
  font-size: calc(var(--font-size-sm) * var(--tv-font-scale-factor, 1.5));
  font-weight: 500;
  color: var(--color-iss-white, #ffffff);
  line-height: var(--tv-line-height-factor, 1.2);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7);
  
  /* Responsive text sizing */
  max-width: 200px; /* TV_CAMERA_CONFIG.ZOOM_TEXT_MAX_WIDTH */
  word-wrap: break-word;
  
  /* Animation for text changes */
  transition: all 150ms var(--tv-easing-fade, cubic-bezier(0.4, 0, 0.2, 1));
}

/* Active zoom instruction styling */
.zoomInstructionActive {
  color: var(--tv-focus-border-color, #4A90E2);
  text-shadow: 0 0 4px rgba(74, 144, 226, 0.5), 0 1px 2px rgba(0, 0, 0, 0.7);
  transform: scale(1.05);
}

/* TV-specific enhancements */
@media (width: 1920px) {
  .container {
    left: 80px; /* TV_CAMERA_CONFIG.CONTROLS_LEFT_OFFSET */
  }
  
  .arrow {
    /* Enhanced visibility for TV */
    border-width: 3px;
  }
  
  .arrowSymbol {
    font-size: 28px; /* Larger for 10-foot viewing */
  }
  
  .zoomInstruction {
    font-size: calc(16px * 1.5); /* TV_TYPOGRAPHY.MIN_FONT_SIZE scaled */
    letter-spacing: 0.025em; /* TV_TYPOGRAPHY.LETTER_SPACING */
  }
  
  .zoomInstructionActive {
    color: var(--tv-focus-border-color, #4A90E2);
    text-shadow: 0 0 4px rgba(74, 144, 226, 0.5);
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .arrow {
    border-width: 3px;
    background: rgba(255, 255, 255, 0.2);
    border-color: var(--color-iss-white, #ffffff);
  }
  
  .arrow--active {
    background: var(--tv-focus-border-color, #4A90E2);
    border-color: var(--color-iss-white, #ffffff);
  }
  
  .arrowsCenter {
    border-width: 3px;
    background: rgba(255, 255, 255, 0.2);
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .container,
  .arrow,
  .zoomInstruction {
    transition: none;
  }
  
  .arrow:hover,
  .arrow--active {
    transform: none;
  }
}

/* Animation keyframes for future use */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-50%) translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(-50%) translateX(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(-50%) translateX(0);
  }
  to {
    opacity: 0;
    transform: translateY(-50%) translateX(-20px);
  }
}

/* Hide controls when not in TV mode or when menu is open */
.container:not(:global(.tv-camera-controls)) {
  display: none;
}

/* Ensure proper stacking order */
.container {
  z-index: 50; /* Below menu (z-index: 1000) but above other UI elements */
}